name: CI/CD - Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Login no Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_HEALTHCHECK }}
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_MOSTRADOR_HORAS }}

      - name: Build e Push da aplicação Healthcheck
        run: |
          IMAGE_TAG=latest
          docker build -t app-healthcheck:$IMAGE_TAG ./apps/app_healthcheck
          docker tag app-healthcheck:$IMAGE_TAG ${{ secrets.ECR_REPO_HEALTHCHECK }}:$IMAGE_TAG
          docker push ${{ secrets.ECR_REPO_HEALTHCHECK }}:$IMAGE_TAG

      - name: Build e Push da aplicação Mostrador de Horas
        run: |
          IMAGE_TAG=latest
          docker build -t app-mostrador-horas:$IMAGE_TAG ./apps/app_mostrador_horas
          docker tag app-mostrador-horas:$IMAGE_TAG ${{ secrets.ECR_REPO_MOSTRADOR_HORAS }}:$IMAGE_TAG
          docker push ${{ secrets.ECR_REPO_MOSTRADOR_HORAS }}:$IMAGE_TAG

  deploy:
    name: Deploy no Kubernetes
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      # Adicionar a configuração da AWS CLI novamente para este job
      - name: Configurar AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Configurar kubeconfig via AWS CLI
        run: |
          aws eks update-kubeconfig --name cluster-desafio --region us-east-1

      - name: Aplicar manifestos Kubernetes e forçar restart
        run: |
          kubectl apply -f infra/kubernetes
          
          # Força o rollout para garantir que os pods sejam atualizados
          kubectl rollout restart deployment/app-healthcheck
          kubectl rollout restart deployment/app-hora          

          # Verifica o status do rollout
          kubectl rollout status deployment/app-healthcheck
          kubectl rollout status deployment/app-hora


